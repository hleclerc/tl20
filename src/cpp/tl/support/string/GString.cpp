#include "../containers/Vec.h"
#include "GString.h"
#include <mutex>
#include <map>

BEG_TL_NAMESPACE

// generated by StrRefs.py
// beg base string refs
static std::map<Str,PI32> id_map = {
    { "", 0 },
    { "operator", 1 },
};
static Vec<StrView> str_vec = {
    "",
    "operator",
};
// end base string refs

static std::mutex string_ref_mutex;

GString::GString( const char *str ) : GString( Str( str ) ) {
}

GString::GString( StrView str ) : GString( Str( str ) ) {
}

GString::GString( const Str &str ) {
    std::lock_guard<std::mutex> _( string_ref_mutex );

    auto iter = id_map.find( str );
    if ( iter == id_map.end() ) {
        iter = id_map.insert( iter, { str, 0 } );
        iter->second = str_vec.push_back_ind( iter->first );
    }

    id = iter->second;
}

GString::operator StrView() const {
    std::lock_guard<std::mutex> _( string_ref_mutex );
    return str_vec[ id ];
}

void GString::display( Displayer &ds ) const {
    ds << operator StrView();
}


END_TL_NAMESPACE
